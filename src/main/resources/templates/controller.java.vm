package ${cfg.basePackage}.${package.ModuleName}.controller;

import cn.hutool.core.bean.BeanUtil;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${cfg.basePackage}.${package.ModuleName}.result.Result;
import ${cfg.basePackage}.${package.ModuleName}.dto.${entity}DTO;
import ${cfg.basePackage}.${package.ModuleName}.vo.${entity}VO;
import ${package.Entity}.${entity};
import ${cfg.basePackage}.${package.ModuleName}.util.QueryUtils;
import ${package.Service}.${table.serviceName};
import ${cfg.basePackage}.${package.ModuleName}.util.MapperUtils;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import lombok.RequiredArgsConstructor;
#if(${cfg.generateExcelTemplate})
import org.springframework.web.multipart.MultipartFile;
import javax.servlet.http.HttpServletResponse;
import ${cfg.basePackage}.${package.ModuleName}.excel.${entity}ExcelDTO;
import com.gkza.digital.util.ExcelUtil;
#end
import org.springframework.web.bind.annotation.*;


#if(${restControllerStyle})
#else
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import java.util.List;


/**
 * 【${table.comment}】控制器层
 *
 * @author ${author}
 * @date ${date}
 */
@Slf4j
@Api(tags = {"【$!{table.comment}】模块Controller"})
    #if(${restControllerStyle})
@RestController
    #else
@Controller
    #end
@RequiredArgsConstructor
@RequestMapping("/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${entity}Controller {
#end

    #if(${table.serviceName})
        #set ($tableServiceNameFormat=${table.serviceName})
        #set ($tableServiceName = $tableServiceNameFormat.substring(1,2).toLowerCase() + $tableServiceNameFormat.substring(2,$tableServiceNameFormat.length()))
    #end
    private final ${table.serviceName}  $tableServiceName;

    @ApiOperation(value = "$!{table.comment}列表查询")
    @PostMapping("/list")
    public Result<List<${entity}VO>> list(@RequestBody ${entity}DTO dto) {
        return Result.ok(MapperUtils.INSTANCE.mapAsList(${entity}VO.class,${tableServiceName}.list(Wrappers.lambdaQuery(BeanUtil.copyProperties(dto, ${entity}.class)))));
    }

    @ApiOperation(value = "$!{table.comment}分页查询")
    @PostMapping("/page")
    public Result<Page<${entity}VO>> page(@RequestBody ${entity}DTO dto) {
        Page<${entity}> page = new Page<>(dto.getCurrent(), dto.getSize());
        Page<${entity}> result = ${tableServiceName}.page(page, QueryUtils.dynamicSort(dto.getSortBy(), Wrappers.query(BeanUtil.copyProperties(dto, ${entity}.class))));
        return Result.ok(MapperUtils.INSTANCE.mapAsPage(${entity}VO.class, result));
    }

    #if(${cfg.generateInsertReturnId})
    @ApiOperation(value = "$!{table.comment}添加,并获取ID")
    @PostMapping("/insertReturnId")
    public Result<Long> insertReturnId(@RequestBody ${entity}DTO dto) {
        ${entity} entity = BeanUtil.copyProperties(dto, ${entity}.class);
        ${tableServiceName}.save(entity);
        return Result.ok(entity.getId());
    }
    #end

    #if(${cfg.generateCurd})
    @ApiOperation(value = "$!{table.comment}添加")
    @PostMapping
    public Result<Boolean> insert(@RequestBody ${entity}DTO dto) {
        ${entity} entity = BeanUtil.copyProperties(dto, ${entity}.class);
        return Result.ok(${tableServiceName}.save(entity));
    }

    @ApiOperation(value = "$!{table.comment}更新")
    @PutMapping
    public Result<Boolean> update(@RequestBody ${entity}DTO dto) {
        ${entity} entity = BeanUtil.copyProperties(dto, ${entity}.class);
        return Result.ok(${tableServiceName}.updateById(entity));
    }

    @ApiOperation(value = "$!{table.comment}删除")
    @DeleteMapping("/{id}")
    public Result<Boolean> delete(@PathVariable("id") Long id) {
        return Result.ok(${tableServiceName}.removeById(id));
    }

    @ApiOperation(value = "$!{table.comment}详情")
    @GetMapping("/{id}")
    public Result<${entity}VO> detail(@PathVariable("id") Long id) {
        return Result.ok(BeanUtil.copyProperties(${tableServiceName}.getById(id), ${entity}VO.class));
    }

    @ApiOperation(value = "批量删除")
    @DeleteMapping("/batchDelete")
    public Result<Boolean> batchDelete(@RequestBody List<Long> ids){
        return Result.ok(${tableServiceName}.removeByIds(ids));
    }
    #end

    #if(${cfg.generateExcelTemplate})
    @ApiOperation(value = "$!{table.comment}-导入Excel")
    @PostMapping("/importExcel")
    public Result<Boolean> importExcel(@RequestParam(value = "file") MultipartFile file){
        return Result.ok(${tableServiceName}.importExcel(file));
    }

    @ApiOperation(value = "$!{table.comment}-导出Excel")
    @GetMapping("/downloadExcel")
    public void downloadExcel(@RequestBody List<Long> ids, HttpServletResponse response) {
        List<${entity}ExcelDTO> list = ${tableServiceName}.downloadExcel(ids);
        ExcelUtil.downloadExcel(response,list,${entity}ExcelDTO.class);
    }
    #end

}

#end